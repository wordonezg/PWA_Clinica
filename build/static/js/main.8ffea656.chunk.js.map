{"version":3,"sources":["assets/images/logo.svg","Components/Menu.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Menu","class","href","type","id","tabindex","Component","url","urlPost","urlPut","urlDelete","App","state","data","modalInsertar","modalEliminar","form","CodigoCita","FechaHora","IdPaciente","Nombres","Apellidos","IdClinica","Clinica","FechaCita","tipoModal","setState","seleccionarCita","cita","peticionesGet","axios","get","then","response","handleChange","e","a","persist","target","name","value","peticionPost","post","catch","error","console","log","peticionPut","put","peticionDelete","delete","this","Fragment","className","onClick","map","icon","faEdit","faTrashAlt","isOpen","style","display","float","htmlFor","readOnly","id_producto","length","onChange","descripcion","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"yTAAe,I,YCITA,E,4JAEF,WACI,OACI,qBAAKC,MAAM,8CAAX,SACI,sBAAKA,MAAM,kBAAX,UACI,mBAAGA,MAAM,eAAeC,KAAK,aAA7B,qBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAA9J,SACA,sBAAMF,MAAM,0BAEZ,qBAAKA,MAAM,2BAA2BG,GAAG,YAAzC,SACA,qBAAIH,MAAM,aAAV,UACI,oBAAIA,MAAM,WAAV,SACA,mBAAGA,MAAM,kBAAkB,eAAa,OAAOC,KAAK,aAApD,qBAGA,oBAAID,MAAM,WAAV,SACA,mBAAGA,MAAM,oBAAoBC,KAAK,IAAIG,SAAS,KAAK,gBAAc,OAAlE,sC,GAjBLC,aA2BJN,ICpBTO,EAAM,mCACNC,EAAU,mCACVC,EAAS,mCACTC,EAAY,mCAEZC,E,4MACJC,MAAM,CACJC,KAAK,GACLC,eAAe,EACfC,eAAe,EACfC,KAAK,CACHC,WAAW,EACXC,UAAU,GACVC,WAAW,EACXC,QAAQ,GACRC,UAAU,GACVC,UAAU,EACVC,QAAQ,GACRC,UAAU,IAEZC,UAAW,I,EAGbV,cAAc,WACZ,EAAKW,SAAS,CAACX,eAAe,EAAKH,MAAMG,iB,EAG3CD,cAAc,WACZ,EAAKY,SAAS,CAACZ,eAAe,EAAKF,MAAME,iB,EAG3Ca,gBAAgB,SAACC,GACf,EAAKF,SAAS,CACZD,UAAU,aACVT,KAAK,CACHC,WAAYW,EAAKX,WACjBC,UAAWU,EAAKV,UAChBC,WAAYS,EAAKT,WACjBG,UAAWM,EAAKN,UAChBE,UAAWI,EAAKJ,c,EAMtBK,cAAc,WACZC,IAAMC,IAAIxB,GAAKyB,MAAK,SAAAC,GAClB,EAAKP,SAAS,CAACb,KAAMoB,EAASpB,W,EAIlCqB,a,uCAAa,WAAOC,GAAP,SAAAC,EAAA,6DACXD,EAAEE,UADS,SAEL,EAAKX,SAAS,CAClBV,KAAK,2BACA,EAAKJ,MAAMI,MADZ,kBAEDmB,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UALnB,2C,wDAUbC,a,sBAAa,sBAAAL,EAAA,oEACJ,EAAKxB,MAAMI,KAAKC,WADZ,SAELa,IAAMY,KAAKlC,EAAQ,EAAKI,MAAMI,MAAMgB,MAAK,SAAAC,GAC7C,EAAKnB,gBACL,EAAKe,mBACJc,OAAM,SAACC,GACRC,QAAQC,IAAIF,MANH,2C,EAUbG,Y,sBAAY,sBAAAX,EAAA,6DACVS,QAAQC,IAAI,EAAKlC,MAAMI,MADb,SAEJc,IAAMkB,IAAIvC,EAAO,IAAI,EAAKG,MAAMI,KAAKC,WAAW,EAAKL,MAAMI,MAAMgB,MAAK,SAAAC,GAC1E,EAAKnB,gBACL,EAAKe,mBACJc,OAAM,SAACC,GACRC,QAAQC,IAAIF,MANJ,2C,EAUZK,e,sBAAe,sBAAAb,EAAA,sEACPN,IAAMoB,OAAOxC,EAAU,IAAI,EAAKE,MAAMI,KAAKC,YAAYe,MAAK,SAAAC,GAChE,EAAKlB,gBACL,EAAKc,mBACJc,OAAM,SAACC,GACRC,QAAQC,IAAIF,MALD,2C,uDASf,WACEO,KAAKtB,kB,oBAEP,WAAS,IAAD,OACCb,EAAMmC,KAAKvC,MAAXI,KACP,OACE,eAAC,IAAMoC,SAAP,WACE,cAAC,EAAD,IACA,sBAAKC,UAAU,UAAf,UACA,wBAAQlD,KAAK,SAASkD,UAAU,kBAAkBC,QAAS,WAAK,EAAK5B,SAAS,CAACV,KAAK,KAAKS,UAAU,aAAc,EAAKX,iBAAtH,wBACA,wBAAOuC,UAAU,QAAjB,UACE,gCACE,+BACE,2CACA,4CACA,0CACA,yCACA,4BAGJ,gCACCF,KAAKvC,MAAMC,KAAK0C,KAAI,SAAA3B,GACnB,OACE,+BACE,6BAAKA,EAAKX,aACV,6BAAKW,EAAKJ,YACV,+BAAKI,EAAKR,QAAV,IAAoBQ,EAAKP,aACzB,6BAAKO,EAAKL,UACV,+BACE,wBAAQpB,KAAK,SAASkD,UAAU,kBAAkBC,QAAS,WAAK,EAAK3B,gBAAgBC,GAAO,EAAKd,iBAAjG,SAAqH,cAAC,IAAD,CAAiB0C,KAAMC,QAC5I,wBAAQtD,KAAK,SAASkD,UAAU,iBAAiBC,QAAS,WAAK,EAAK3B,gBAAgBC,GAAM,EAAKb,iBAA/F,SAAkH,cAAC,IAAD,CAAiByC,KAAME,sBAOnJ,eAAC,IAAD,CAAOC,OAAQR,KAAKvC,MAAME,cAA1B,UACE,cAAC,IAAD,CAAa8C,MAAO,CAACC,QAAQ,SAA7B,SACE,sBAAMD,MAAO,CAACE,MAAM,SAApB,iBAEF,cAAC,IAAD,UACE,sBAAKT,UAAU,aAAf,UACE,uBAAOU,QAAQ,KAAf,oBACA,uBAAOV,UAAU,eAAelD,KAAK,OAAOoC,KAAK,aAAanC,GAAG,aAAa4D,UAAQ,EAACxB,MAAOxB,EAAKA,EAAKiD,YAAYd,KAAKvC,MAAMC,KAAKqD,OAAO,IAE3I,uBAAOH,QAAQ,WAAf,wBACA,uBAAOV,UAAU,eAAelD,KAAK,OAAOoC,KAAK,YAAYnC,GAAG,YAAY+D,SAAUhB,KAAKjB,aAAcM,MAAOxB,EAAKA,EAAKQ,UAAU,KAEpI,uBAAOuC,QAAQ,QAAf,qBACA,yBAAQV,UAAU,eAAed,KAAK,YAAYnC,GAAG,YAAY+D,SAAUhB,KAAKjB,aAAcM,MAAOxB,EAAKA,EAAKO,QAAQ,EAAvH,UACE,wBAAQiB,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,2BAGF,uBAAOuB,QAAQ,cAAf,sBACA,uBAAOV,UAAU,eAAelD,KAAK,OAAOoC,KAAK,aAAanC,GAAG,aAAa+D,SAAUhB,KAAKjB,aAAcM,MAAOxB,EAAKA,EAAKoD,YAAY,UAK5I,eAAC,IAAD,WACyB,YAAtBjB,KAAKvC,MAAMa,UACV,wBAAQ4B,UAAU,kBAAkBC,QAAS,kBAAI,EAAKb,gBAAtD,sBAEU,wBAAQY,UAAU,kBAAkBC,QAAS,kBAAI,EAAKP,eAAtD,wBAKZ,wBAAQ5C,KAAK,SAASkD,UAAU,eAAeC,QAAS,kBAAI,EAAKxC,iBAAjE,4BAIJ,eAAC,IAAD,CAAO6C,OAAQR,KAAKvC,MAAMG,cAA1B,UACE,eAAC,IAAD,oDACsCC,GAAQA,EAAKY,KADnD,QAGA,eAAC,IAAD,WACE,wBAAQzB,KAAK,SAASkD,UAAU,iBAAiBC,QAAS,WAAK,EAAKL,kBAApE,mBACA,wBAAQ9C,KAAK,SAASkD,UAAU,oBAAoBC,QAAS,WAAK,EAAKvC,iBAAvE,gC,GAzKMT,aAkLHK,ICtLT0D,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT5C,MAAK,SAACiD,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvE,QACfkE,UAAUC,cAAcO,YAI1BzC,QAAQC,IACN,+GAKE+B,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBpC,QAAQC,IAAI,sCAGR+B,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BtC,OAAM,SAACC,GACNC,QAAQD,MAAM,4CAA6CA,MC9FjE,IAYe6C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFSnB,SAAkBxB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,GAAwBhC,OAAOC,SAAStE,MACpDsG,SAAWjC,OAAOC,SAASgC,OAIvC,OAGFjC,OAAOkC,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM2B,GAAN,sBAEPlC,IAgEV,SAAiCO,EAAOC,GAEtC6B,MAAM9B,EAAO,CACX+B,QAAS,CAAE,iBAAkB,YAE5B3E,MAAK,SAACC,GAEL,IAAM2E,EAAc3E,EAAS0E,QAAQ5E,IAAI,gBAEnB,MAApBE,EAAS4E,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM/E,MAAK,SAACiD,GAClCA,EAAa+B,aAAahF,MAAK,WAC7BuC,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BlC,OAAM,WACLE,QAAQC,IAAI,oEAtFVoE,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM/E,MAAK,WACjCa,QAAQC,IACN,+GAMJ6B,EAAgBC,EAAOC,OE/B/BsC,GAKA1B,M","file":"static/js/main.8ffea656.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { Component } from 'react';\n\nclass Menu extends Component{\n\n    render(){\n        return (\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"index.html\">Clinica</a>\n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul class=\"navbar-nav\">\n                        <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"index.html\">Citas</a>\n                        </li>\n                        \n                        <li class=\"nav-item\">\n                        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n                        </li>\n                    </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Menu;","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport {Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport React from 'react';\nimport { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport logo from './assets/images/logo.svg';\nimport './assets/css/App.css';\nimport Menu from './Components/Menu';\n\nconst url = \"https://localhost:44342/api/Cita\";\nconst urlPost = \"https://localhost:44342/api/Cita\";\nconst urlPut = \"https://localhost:44342/api/Cita\";\nconst urlDelete = \"https://localhost:44342/api/Cita\";\n\nclass App extends Component{\n  state={\n    data:[],\n    modalInsertar: false,\n    modalEliminar: false,\n    form:{\n      CodigoCita:0,\n      FechaHora:'',\n      IdPaciente:0,\n      Nombres:'',\n      Apellidos:'',\n      IdClinica:0,\n      Clinica:'',\n      FechaCita:'',\n    },\n    tipoModal: '',\n  }\n\n  modalEliminar=()=>{\n    this.setState({modalEliminar:!this.state.modalEliminar});\n  }\n\n  modalInsertar=()=>{\n    this.setState({modalInsertar:!this.state.modalInsertar});\n  }\n\n  seleccionarCita=(cita)=>{\n    this.setState({\n      tipoModal:'actualizar',\n      form:{\n        CodigoCita: cita.CodigoCita,\n        FechaHora: cita.FechaHora,\n        IdPaciente: cita.IdPaciente,\n        IdClinica: cita.IdClinica,\n        FechaCita: cita.FechaCita,\n      }\n\n    })\n  }\n\n  peticionesGet=()=>{\n    axios.get(url).then(response=>{\n      this.setState({data: response.data});\n    })\n  }\n\n  handleChange=async (e)=>{\n    e.persist();\n    await this.setState({\n      form:{\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  peticionPost=async ()=>{\n    delete this.state.form.CodigoCita;\n    await axios.post(urlPost,this.state.form).then(response=>{\n      this.modalInsertar();\n      this.peticionesGet();\n    }).catch((error)=>{\n      console.log(error);\n    });\n  }\n\n  peticionPut=async ()=>{\n    console.log(this.state.form);\n    await axios.put(urlPut+\"/\"+this.state.form.CodigoCita,this.state.form).then(response=>{\n      this.modalInsertar();\n      this.peticionesGet();\n    }).catch((error)=>{\n      console.log(error);\n    });\n  }\n\n  peticionDelete=async ()=>{\n    await axios.delete(urlDelete+\"/\"+this.state.form.CodigoCita).then(response=>{\n      this.modalEliminar();\n      this.peticionesGet();\n    }).catch((error)=>{\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.peticionesGet();\n  }\n  render(){\n    const {form}=this.state;\n    return (\n      <React.Fragment>\n        <Menu/>\n        <div className=\"App m-5\">\n        <button type=\"button\" className=\"btn btn-success\" onClick={()=>{this.setState({form:null,tipoModal:'insertar'}); this.modalInsertar()}}>Crear Cita</button>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Código</th>\n              <th>Fecha Cita</th>\n              <th>Paciente</th>\n              <th>Clinica</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n          {this.state.data.map(cita=>{\n            return(\n              <tr>\n                <td>{cita.CodigoCita}</td>\n                <td>{cita.FechaCita}</td>\n                <td>{cita.Nombres} {cita.Apellidos}</td>\n                <td>{cita.Clinica}</td>\n                <td>\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{this.seleccionarCita(cita); this.modalInsertar();}} ><FontAwesomeIcon icon={faEdit}/></button>\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={()=>{this.seleccionarCita(cita);this.modalEliminar();}}><FontAwesomeIcon icon={faTrashAlt}/></button>\n                </td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader style={{display:'block'}}>\n            <span style={{float:'right'}}>x</span>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"form-group\">\n              <label htmlFor=\"id\">Codigo</label>\n              <input className=\"form-control\" type=\"text\" name=\"CodigoCita\" id=\"CodigoCita\" readOnly value={form?form.id_producto:this.state.data.length+1} />\n\n              <label htmlFor=\"producto\">Fecha Cita</label>\n              <input className=\"form-control\" type=\"date\" name=\"FechaCita\" id=\"FechaCita\" onChange={this.handleChange} value={form?form.FechaCita:''} />\n\n              <label htmlFor=\"marca\">Clinica</label>\n              <select className=\"form-control\" name=\"IdClinica\" id=\"IdClinica\" onChange={this.handleChange} value={form?form.Clinica:0}>\n                <option value=\"0\">-- Seleccione --</option>\n                <option value=\"1\">Rafel</option>\n                <option value=\"2\">Esperanza</option>\n                <option value=\"3\">La bendicion</option>\n                <option value=\"4\">Santa Cruz</option>\n                <option value=\"5\">Cruz Verde</option>\n              </select>\n\n              <label htmlFor=\"descripcion\">Paciente</label>\n              <input className=\"form-control\" type=\"text\" name=\"IdPaciente\" id=\"IdPaciente\" onChange={this.handleChange} value={form?form.descripcion:''}/>\n\n            \n            </div>\n          </ModalBody>\n          <ModalFooter>\n            {this.state.tipoModal=='insertar'?\n              <button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>\n                Insertar\n              </button>:<button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>\n                Actualizar\n              </button>\n            }\n            \n            <button type=\"button\" className=\"btn btn-dark\" onClick={()=>this.modalInsertar()}>Cancelar</button>\n            \n          </ModalFooter>\n        </Modal>\n        <Modal isOpen={this.state.modalEliminar}>\n          <ModalBody>\n            ¿Seguro que desea eliminar la cita {form && form.cita} ? \n          </ModalBody>\n          <ModalFooter>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={()=>{this.peticionDelete()}}>Sí</button>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={()=>{this.modalEliminar();}} >No</button>\n          </ModalFooter>\n        </Modal>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}